# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.dnn_smf_info_item_dnai_list_inner import DnnSmfInfoItemDnaiListInner
from openapi_server.models.dnn_smf_info_item_dnn import DnnSmfInfoItemDnn
from openapi_server import util

from openapi_server.models.dnn_smf_info_item_dnai_list_inner import DnnSmfInfoItemDnaiListInner  # noqa: E501
from openapi_server.models.dnn_smf_info_item_dnn import DnnSmfInfoItemDnn  # noqa: E501

class DnnSmfInfoItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dnn=None, dnai_list=None):  # noqa: E501
        """DnnSmfInfoItem - a model defined in OpenAPI

        :param dnn: The dnn of this DnnSmfInfoItem.  # noqa: E501
        :type dnn: DnnSmfInfoItemDnn
        :param dnai_list: The dnai_list of this DnnSmfInfoItem.  # noqa: E501
        :type dnai_list: List[DnnSmfInfoItemDnaiListInner]
        """
        self.openapi_types = {
            'dnn': DnnSmfInfoItemDnn,
            'dnai_list': List[DnnSmfInfoItemDnaiListInner]
        }

        self.attribute_map = {
            'dnn': 'dnn',
            'dnai_list': 'dnaiList'
        }

        self._dnn = dnn
        self._dnai_list = dnai_list

    @classmethod
    def from_dict(cls, dikt) -> 'DnnSmfInfoItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DnnSmfInfoItem of this DnnSmfInfoItem.  # noqa: E501
        :rtype: DnnSmfInfoItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dnn(self):
        """Gets the dnn of this DnnSmfInfoItem.


        :return: The dnn of this DnnSmfInfoItem.
        :rtype: DnnSmfInfoItemDnn
        """
        return self._dnn

    @dnn.setter
    def dnn(self, dnn):
        """Sets the dnn of this DnnSmfInfoItem.


        :param dnn: The dnn of this DnnSmfInfoItem.
        :type dnn: DnnSmfInfoItemDnn
        """
        if dnn is None:
            raise ValueError("Invalid value for `dnn`, must not be `None`")  # noqa: E501

        self._dnn = dnn

    @property
    def dnai_list(self):
        """Gets the dnai_list of this DnnSmfInfoItem.


        :return: The dnai_list of this DnnSmfInfoItem.
        :rtype: List[DnnSmfInfoItemDnaiListInner]
        """
        return self._dnai_list

    @dnai_list.setter
    def dnai_list(self, dnai_list):
        """Sets the dnai_list of this DnnSmfInfoItem.


        :param dnai_list: The dnai_list of this DnnSmfInfoItem.
        :type dnai_list: List[DnnSmfInfoItemDnaiListInner]
        """
        if dnai_list is not None and len(dnai_list) < 1:
            raise ValueError("Invalid value for `dnai_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._dnai_list = dnai_list

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.snssai_info_item import SnssaiInfoItem
from openapi_server import util

from openapi_server.models.snssai_info_item import SnssaiInfoItem  # noqa: E501

class UnTrustAfInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, af_id=None, s_nssai_info_list=None, mapping_ind=False):  # noqa: E501
        """UnTrustAfInfo - a model defined in OpenAPI

        :param af_id: The af_id of this UnTrustAfInfo.  # noqa: E501
        :type af_id: str
        :param s_nssai_info_list: The s_nssai_info_list of this UnTrustAfInfo.  # noqa: E501
        :type s_nssai_info_list: List[SnssaiInfoItem]
        :param mapping_ind: The mapping_ind of this UnTrustAfInfo.  # noqa: E501
        :type mapping_ind: bool
        """
        self.openapi_types = {
            'af_id': str,
            's_nssai_info_list': List[SnssaiInfoItem],
            'mapping_ind': bool
        }

        self.attribute_map = {
            'af_id': 'afId',
            's_nssai_info_list': 'sNssaiInfoList',
            'mapping_ind': 'mappingInd'
        }

        self._af_id = af_id
        self._s_nssai_info_list = s_nssai_info_list
        self._mapping_ind = mapping_ind

    @classmethod
    def from_dict(cls, dikt) -> 'UnTrustAfInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UnTrustAfInfo of this UnTrustAfInfo.  # noqa: E501
        :rtype: UnTrustAfInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def af_id(self):
        """Gets the af_id of this UnTrustAfInfo.


        :return: The af_id of this UnTrustAfInfo.
        :rtype: str
        """
        return self._af_id

    @af_id.setter
    def af_id(self, af_id):
        """Sets the af_id of this UnTrustAfInfo.


        :param af_id: The af_id of this UnTrustAfInfo.
        :type af_id: str
        """
        if af_id is None:
            raise ValueError("Invalid value for `af_id`, must not be `None`")  # noqa: E501

        self._af_id = af_id

    @property
    def s_nssai_info_list(self):
        """Gets the s_nssai_info_list of this UnTrustAfInfo.


        :return: The s_nssai_info_list of this UnTrustAfInfo.
        :rtype: List[SnssaiInfoItem]
        """
        return self._s_nssai_info_list

    @s_nssai_info_list.setter
    def s_nssai_info_list(self, s_nssai_info_list):
        """Sets the s_nssai_info_list of this UnTrustAfInfo.


        :param s_nssai_info_list: The s_nssai_info_list of this UnTrustAfInfo.
        :type s_nssai_info_list: List[SnssaiInfoItem]
        """
        if s_nssai_info_list is not None and len(s_nssai_info_list) < 1:
            raise ValueError("Invalid value for `s_nssai_info_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._s_nssai_info_list = s_nssai_info_list

    @property
    def mapping_ind(self):
        """Gets the mapping_ind of this UnTrustAfInfo.


        :return: The mapping_ind of this UnTrustAfInfo.
        :rtype: bool
        """
        return self._mapping_ind

    @mapping_ind.setter
    def mapping_ind(self, mapping_ind):
        """Sets the mapping_ind of this UnTrustAfInfo.


        :param mapping_ind: The mapping_ind of this UnTrustAfInfo.
        :type mapping_ind: bool
        """

        self._mapping_ind = mapping_ind

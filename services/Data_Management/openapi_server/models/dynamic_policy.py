# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.m5_qo_s_specification import M5QoSSpecification
from openapi_server.models.service_data_flow_description import ServiceDataFlowDescription
from openapi_server import util

from openapi_server.models.m5_qo_s_specification import M5QoSSpecification  # noqa: E501
from openapi_server.models.service_data_flow_description import ServiceDataFlowDescription  # noqa: E501

class DynamicPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dynamic_policy_id=None, policy_template_id=None, service_data_flow_descriptions=None, provisioning_session_id=None, qos_specification=None, enforcement_method=None, enforcement_bit_rate=None):  # noqa: E501
        """DynamicPolicy - a model defined in OpenAPI

        :param dynamic_policy_id: The dynamic_policy_id of this DynamicPolicy.  # noqa: E501
        :type dynamic_policy_id: str
        :param policy_template_id: The policy_template_id of this DynamicPolicy.  # noqa: E501
        :type policy_template_id: str
        :param service_data_flow_descriptions: The service_data_flow_descriptions of this DynamicPolicy.  # noqa: E501
        :type service_data_flow_descriptions: List[ServiceDataFlowDescription]
        :param provisioning_session_id: The provisioning_session_id of this DynamicPolicy.  # noqa: E501
        :type provisioning_session_id: str
        :param qos_specification: The qos_specification of this DynamicPolicy.  # noqa: E501
        :type qos_specification: M5QoSSpecification
        :param enforcement_method: The enforcement_method of this DynamicPolicy.  # noqa: E501
        :type enforcement_method: str
        :param enforcement_bit_rate: The enforcement_bit_rate of this DynamicPolicy.  # noqa: E501
        :type enforcement_bit_rate: int
        """
        self.openapi_types = {
            'dynamic_policy_id': str,
            'policy_template_id': str,
            'service_data_flow_descriptions': List[ServiceDataFlowDescription],
            'provisioning_session_id': str,
            'qos_specification': M5QoSSpecification,
            'enforcement_method': str,
            'enforcement_bit_rate': int
        }

        self.attribute_map = {
            'dynamic_policy_id': 'dynamicPolicyId',
            'policy_template_id': 'policyTemplateId',
            'service_data_flow_descriptions': 'serviceDataFlowDescriptions',
            'provisioning_session_id': 'provisioningSessionId',
            'qos_specification': 'qosSpecification',
            'enforcement_method': 'enforcementMethod',
            'enforcement_bit_rate': 'enforcementBitRate'
        }

        self._dynamic_policy_id = dynamic_policy_id
        self._policy_template_id = policy_template_id
        self._service_data_flow_descriptions = service_data_flow_descriptions
        self._provisioning_session_id = provisioning_session_id
        self._qos_specification = qos_specification
        self._enforcement_method = enforcement_method
        self._enforcement_bit_rate = enforcement_bit_rate

    @classmethod
    def from_dict(cls, dikt) -> 'DynamicPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DynamicPolicy of this DynamicPolicy.  # noqa: E501
        :rtype: DynamicPolicy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dynamic_policy_id(self):
        """Gets the dynamic_policy_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :return: The dynamic_policy_id of this DynamicPolicy.
        :rtype: str
        """
        return self._dynamic_policy_id

    @dynamic_policy_id.setter
    def dynamic_policy_id(self, dynamic_policy_id):
        """Sets the dynamic_policy_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :param dynamic_policy_id: The dynamic_policy_id of this DynamicPolicy.
        :type dynamic_policy_id: str
        """
        if dynamic_policy_id is None:
            raise ValueError("Invalid value for `dynamic_policy_id`, must not be `None`")  # noqa: E501

        self._dynamic_policy_id = dynamic_policy_id

    @property
    def policy_template_id(self):
        """Gets the policy_template_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :return: The policy_template_id of this DynamicPolicy.
        :rtype: str
        """
        return self._policy_template_id

    @policy_template_id.setter
    def policy_template_id(self, policy_template_id):
        """Sets the policy_template_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :param policy_template_id: The policy_template_id of this DynamicPolicy.
        :type policy_template_id: str
        """
        if policy_template_id is None:
            raise ValueError("Invalid value for `policy_template_id`, must not be `None`")  # noqa: E501

        self._policy_template_id = policy_template_id

    @property
    def service_data_flow_descriptions(self):
        """Gets the service_data_flow_descriptions of this DynamicPolicy.


        :return: The service_data_flow_descriptions of this DynamicPolicy.
        :rtype: List[ServiceDataFlowDescription]
        """
        return self._service_data_flow_descriptions

    @service_data_flow_descriptions.setter
    def service_data_flow_descriptions(self, service_data_flow_descriptions):
        """Sets the service_data_flow_descriptions of this DynamicPolicy.


        :param service_data_flow_descriptions: The service_data_flow_descriptions of this DynamicPolicy.
        :type service_data_flow_descriptions: List[ServiceDataFlowDescription]
        """
        if service_data_flow_descriptions is None:
            raise ValueError("Invalid value for `service_data_flow_descriptions`, must not be `None`")  # noqa: E501

        self._service_data_flow_descriptions = service_data_flow_descriptions

    @property
    def provisioning_session_id(self):
        """Gets the provisioning_session_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :return: The provisioning_session_id of this DynamicPolicy.
        :rtype: str
        """
        return self._provisioning_session_id

    @provisioning_session_id.setter
    def provisioning_session_id(self, provisioning_session_id):
        """Sets the provisioning_session_id of this DynamicPolicy.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :param provisioning_session_id: The provisioning_session_id of this DynamicPolicy.
        :type provisioning_session_id: str
        """
        if provisioning_session_id is None:
            raise ValueError("Invalid value for `provisioning_session_id`, must not be `None`")  # noqa: E501

        self._provisioning_session_id = provisioning_session_id

    @property
    def qos_specification(self):
        """Gets the qos_specification of this DynamicPolicy.


        :return: The qos_specification of this DynamicPolicy.
        :rtype: M5QoSSpecification
        """
        return self._qos_specification

    @qos_specification.setter
    def qos_specification(self, qos_specification):
        """Sets the qos_specification of this DynamicPolicy.


        :param qos_specification: The qos_specification of this DynamicPolicy.
        :type qos_specification: M5QoSSpecification
        """

        self._qos_specification = qos_specification

    @property
    def enforcement_method(self):
        """Gets the enforcement_method of this DynamicPolicy.


        :return: The enforcement_method of this DynamicPolicy.
        :rtype: str
        """
        return self._enforcement_method

    @enforcement_method.setter
    def enforcement_method(self, enforcement_method):
        """Sets the enforcement_method of this DynamicPolicy.


        :param enforcement_method: The enforcement_method of this DynamicPolicy.
        :type enforcement_method: str
        """

        self._enforcement_method = enforcement_method

    @property
    def enforcement_bit_rate(self):
        """Gets the enforcement_bit_rate of this DynamicPolicy.


        :return: The enforcement_bit_rate of this DynamicPolicy.
        :rtype: int
        """
        return self._enforcement_bit_rate

    @enforcement_bit_rate.setter
    def enforcement_bit_rate(self, enforcement_bit_rate):
        """Sets the enforcement_bit_rate of this DynamicPolicy.


        :param enforcement_bit_rate: The enforcement_bit_rate of this DynamicPolicy.
        :type enforcement_bit_rate: int
        """

        self._enforcement_bit_rate = enforcement_bit_rate

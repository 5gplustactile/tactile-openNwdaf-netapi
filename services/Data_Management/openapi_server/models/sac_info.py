# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SACInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, numeric_val_num_ues=None, numeric_val_num_pdu_sess=None, perc_value_num_ues=None, perc_value_num_pdu_sess=None):  # noqa: E501
        """SACInfo - a model defined in OpenAPI

        :param numeric_val_num_ues: The numeric_val_num_ues of this SACInfo.  # noqa: E501
        :type numeric_val_num_ues: int
        :param numeric_val_num_pdu_sess: The numeric_val_num_pdu_sess of this SACInfo.  # noqa: E501
        :type numeric_val_num_pdu_sess: int
        :param perc_value_num_ues: The perc_value_num_ues of this SACInfo.  # noqa: E501
        :type perc_value_num_ues: int
        :param perc_value_num_pdu_sess: The perc_value_num_pdu_sess of this SACInfo.  # noqa: E501
        :type perc_value_num_pdu_sess: int
        """
        self.openapi_types = {
            'numeric_val_num_ues': int,
            'numeric_val_num_pdu_sess': int,
            'perc_value_num_ues': int,
            'perc_value_num_pdu_sess': int
        }

        self.attribute_map = {
            'numeric_val_num_ues': 'numericValNumUes',
            'numeric_val_num_pdu_sess': 'numericValNumPduSess',
            'perc_value_num_ues': 'percValueNumUes',
            'perc_value_num_pdu_sess': 'percValueNumPduSess'
        }

        self._numeric_val_num_ues = numeric_val_num_ues
        self._numeric_val_num_pdu_sess = numeric_val_num_pdu_sess
        self._perc_value_num_ues = perc_value_num_ues
        self._perc_value_num_pdu_sess = perc_value_num_pdu_sess

    @classmethod
    def from_dict(cls, dikt) -> 'SACInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SACInfo of this SACInfo.  # noqa: E501
        :rtype: SACInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numeric_val_num_ues(self):
        """Gets the numeric_val_num_ues of this SACInfo.


        :return: The numeric_val_num_ues of this SACInfo.
        :rtype: int
        """
        return self._numeric_val_num_ues

    @numeric_val_num_ues.setter
    def numeric_val_num_ues(self, numeric_val_num_ues):
        """Sets the numeric_val_num_ues of this SACInfo.


        :param numeric_val_num_ues: The numeric_val_num_ues of this SACInfo.
        :type numeric_val_num_ues: int
        """

        self._numeric_val_num_ues = numeric_val_num_ues

    @property
    def numeric_val_num_pdu_sess(self):
        """Gets the numeric_val_num_pdu_sess of this SACInfo.


        :return: The numeric_val_num_pdu_sess of this SACInfo.
        :rtype: int
        """
        return self._numeric_val_num_pdu_sess

    @numeric_val_num_pdu_sess.setter
    def numeric_val_num_pdu_sess(self, numeric_val_num_pdu_sess):
        """Sets the numeric_val_num_pdu_sess of this SACInfo.


        :param numeric_val_num_pdu_sess: The numeric_val_num_pdu_sess of this SACInfo.
        :type numeric_val_num_pdu_sess: int
        """

        self._numeric_val_num_pdu_sess = numeric_val_num_pdu_sess

    @property
    def perc_value_num_ues(self):
        """Gets the perc_value_num_ues of this SACInfo.


        :return: The perc_value_num_ues of this SACInfo.
        :rtype: int
        """
        return self._perc_value_num_ues

    @perc_value_num_ues.setter
    def perc_value_num_ues(self, perc_value_num_ues):
        """Sets the perc_value_num_ues of this SACInfo.


        :param perc_value_num_ues: The perc_value_num_ues of this SACInfo.
        :type perc_value_num_ues: int
        """
        if perc_value_num_ues is not None and perc_value_num_ues > 100:  # noqa: E501
            raise ValueError("Invalid value for `perc_value_num_ues`, must be a value less than or equal to `100`")  # noqa: E501
        if perc_value_num_ues is not None and perc_value_num_ues < 0:  # noqa: E501
            raise ValueError("Invalid value for `perc_value_num_ues`, must be a value greater than or equal to `0`")  # noqa: E501

        self._perc_value_num_ues = perc_value_num_ues

    @property
    def perc_value_num_pdu_sess(self):
        """Gets the perc_value_num_pdu_sess of this SACInfo.


        :return: The perc_value_num_pdu_sess of this SACInfo.
        :rtype: int
        """
        return self._perc_value_num_pdu_sess

    @perc_value_num_pdu_sess.setter
    def perc_value_num_pdu_sess(self, perc_value_num_pdu_sess):
        """Sets the perc_value_num_pdu_sess of this SACInfo.


        :param perc_value_num_pdu_sess: The perc_value_num_pdu_sess of this SACInfo.
        :type perc_value_num_pdu_sess: int
        """
        if perc_value_num_pdu_sess is not None and perc_value_num_pdu_sess > 100:  # noqa: E501
            raise ValueError("Invalid value for `perc_value_num_pdu_sess`, must be a value less than or equal to `100`")  # noqa: E501
        if perc_value_num_pdu_sess is not None and perc_value_num_pdu_sess < 0:  # noqa: E501
            raise ValueError("Invalid value for `perc_value_num_pdu_sess`, must be a value greater than or equal to `0`")  # noqa: E501

        self._perc_value_num_pdu_sess = perc_value_num_pdu_sess

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.sac_event_report_item import SACEventReportItem
from openapi_server import util

from openapi_server.models.sac_event_report_item import SACEventReportItem  # noqa: E501

class SACEventReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report=None, notify_correlation_id=None):  # noqa: E501
        """SACEventReport - a model defined in OpenAPI

        :param report: The report of this SACEventReport.  # noqa: E501
        :type report: SACEventReportItem
        :param notify_correlation_id: The notify_correlation_id of this SACEventReport.  # noqa: E501
        :type notify_correlation_id: str
        """
        self.openapi_types = {
            'report': SACEventReportItem,
            'notify_correlation_id': str
        }

        self.attribute_map = {
            'report': 'report',
            'notify_correlation_id': 'notifyCorrelationId'
        }

        self._report = report
        self._notify_correlation_id = notify_correlation_id

    @classmethod
    def from_dict(cls, dikt) -> 'SACEventReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SACEventReport of this SACEventReport.  # noqa: E501
        :rtype: SACEventReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report(self):
        """Gets the report of this SACEventReport.


        :return: The report of this SACEventReport.
        :rtype: SACEventReportItem
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this SACEventReport.


        :param report: The report of this SACEventReport.
        :type report: SACEventReportItem
        """
        if report is None:
            raise ValueError("Invalid value for `report`, must not be `None`")  # noqa: E501

        self._report = report

    @property
    def notify_correlation_id(self):
        """Gets the notify_correlation_id of this SACEventReport.


        :return: The notify_correlation_id of this SACEventReport.
        :rtype: str
        """
        return self._notify_correlation_id

    @notify_correlation_id.setter
    def notify_correlation_id(self, notify_correlation_id):
        """Sets the notify_correlation_id of this SACEventReport.


        :param notify_correlation_id: The notify_correlation_id of this SACEventReport.
        :type notify_correlation_id: str
        """

        self._notify_correlation_id = notify_correlation_id

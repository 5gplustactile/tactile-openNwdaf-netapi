# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.m5_qo_s_specification import M5QoSSpecification
from openapi_server.models.service_data_flow_description import ServiceDataFlowDescription
from openapi_server import util

from openapi_server.models.m5_qo_s_specification import M5QoSSpecification  # noqa: E501
from openapi_server.models.service_data_flow_description import ServiceDataFlowDescription  # noqa: E501

class NetworkAssistanceSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, na_session_id=None, service_data_flow_description=None, policy_template_id=None, requested_qo_s=None, recommended_qo_s=None, notfication_url=None):  # noqa: E501
        """NetworkAssistanceSession - a model defined in OpenAPI

        :param na_session_id: The na_session_id of this NetworkAssistanceSession.  # noqa: E501
        :type na_session_id: str
        :param service_data_flow_description: The service_data_flow_description of this NetworkAssistanceSession.  # noqa: E501
        :type service_data_flow_description: List[ServiceDataFlowDescription]
        :param policy_template_id: The policy_template_id of this NetworkAssistanceSession.  # noqa: E501
        :type policy_template_id: str
        :param requested_qo_s: The requested_qo_s of this NetworkAssistanceSession.  # noqa: E501
        :type requested_qo_s: M5QoSSpecification
        :param recommended_qo_s: The recommended_qo_s of this NetworkAssistanceSession.  # noqa: E501
        :type recommended_qo_s: M5QoSSpecification
        :param notfication_url: The notfication_url of this NetworkAssistanceSession.  # noqa: E501
        :type notfication_url: str
        """
        self.openapi_types = {
            'na_session_id': str,
            'service_data_flow_description': List[ServiceDataFlowDescription],
            'policy_template_id': str,
            'requested_qo_s': M5QoSSpecification,
            'recommended_qo_s': M5QoSSpecification,
            'notfication_url': str
        }

        self.attribute_map = {
            'na_session_id': 'naSessionId',
            'service_data_flow_description': 'serviceDataFlowDescription',
            'policy_template_id': 'policyTemplateId',
            'requested_qo_s': 'requestedQoS',
            'recommended_qo_s': 'recommendedQoS',
            'notfication_url': 'notficationURL'
        }

        self._na_session_id = na_session_id
        self._service_data_flow_description = service_data_flow_description
        self._policy_template_id = policy_template_id
        self._requested_qo_s = requested_qo_s
        self._recommended_qo_s = recommended_qo_s
        self._notfication_url = notfication_url

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkAssistanceSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkAssistanceSession of this NetworkAssistanceSession.  # noqa: E501
        :rtype: NetworkAssistanceSession
        """
        return util.deserialize_model(dikt, cls)

    @property
    def na_session_id(self):
        """Gets the na_session_id of this NetworkAssistanceSession.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :return: The na_session_id of this NetworkAssistanceSession.
        :rtype: str
        """
        return self._na_session_id

    @na_session_id.setter
    def na_session_id(self, na_session_id):
        """Sets the na_session_id of this NetworkAssistanceSession.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :param na_session_id: The na_session_id of this NetworkAssistanceSession.
        :type na_session_id: str
        """
        if na_session_id is None:
            raise ValueError("Invalid value for `na_session_id`, must not be `None`")  # noqa: E501

        self._na_session_id = na_session_id

    @property
    def service_data_flow_description(self):
        """Gets the service_data_flow_description of this NetworkAssistanceSession.


        :return: The service_data_flow_description of this NetworkAssistanceSession.
        :rtype: List[ServiceDataFlowDescription]
        """
        return self._service_data_flow_description

    @service_data_flow_description.setter
    def service_data_flow_description(self, service_data_flow_description):
        """Sets the service_data_flow_description of this NetworkAssistanceSession.


        :param service_data_flow_description: The service_data_flow_description of this NetworkAssistanceSession.
        :type service_data_flow_description: List[ServiceDataFlowDescription]
        """
        if service_data_flow_description is not None and len(service_data_flow_description) < 1:
            raise ValueError("Invalid value for `service_data_flow_description`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._service_data_flow_description = service_data_flow_description

    @property
    def policy_template_id(self):
        """Gets the policy_template_id of this NetworkAssistanceSession.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :return: The policy_template_id of this NetworkAssistanceSession.
        :rtype: str
        """
        return self._policy_template_id

    @policy_template_id.setter
    def policy_template_id(self, policy_template_id):
        """Sets the policy_template_id of this NetworkAssistanceSession.

        String chosen by the 5GMS AF to serve as an identifier in a resource URI.  # noqa: E501

        :param policy_template_id: The policy_template_id of this NetworkAssistanceSession.
        :type policy_template_id: str
        """

        self._policy_template_id = policy_template_id

    @property
    def requested_qo_s(self):
        """Gets the requested_qo_s of this NetworkAssistanceSession.


        :return: The requested_qo_s of this NetworkAssistanceSession.
        :rtype: M5QoSSpecification
        """
        return self._requested_qo_s

    @requested_qo_s.setter
    def requested_qo_s(self, requested_qo_s):
        """Sets the requested_qo_s of this NetworkAssistanceSession.


        :param requested_qo_s: The requested_qo_s of this NetworkAssistanceSession.
        :type requested_qo_s: M5QoSSpecification
        """

        self._requested_qo_s = requested_qo_s

    @property
    def recommended_qo_s(self):
        """Gets the recommended_qo_s of this NetworkAssistanceSession.


        :return: The recommended_qo_s of this NetworkAssistanceSession.
        :rtype: M5QoSSpecification
        """
        return self._recommended_qo_s

    @recommended_qo_s.setter
    def recommended_qo_s(self, recommended_qo_s):
        """Sets the recommended_qo_s of this NetworkAssistanceSession.


        :param recommended_qo_s: The recommended_qo_s of this NetworkAssistanceSession.
        :type recommended_qo_s: M5QoSSpecification
        """

        self._recommended_qo_s = recommended_qo_s

    @property
    def notfication_url(self):
        """Gets the notfication_url of this NetworkAssistanceSession.

        Uniform Resource Locator, comforming with the URI Generic Syntax specified in IETF RFC 3986.  # noqa: E501

        :return: The notfication_url of this NetworkAssistanceSession.
        :rtype: str
        """
        return self._notfication_url

    @notfication_url.setter
    def notfication_url(self, notfication_url):
        """Sets the notfication_url of this NetworkAssistanceSession.

        Uniform Resource Locator, comforming with the URI Generic Syntax specified in IETF RFC 3986.  # noqa: E501

        :param notfication_url: The notfication_url of this NetworkAssistanceSession.
        :type notfication_url: str
        """

        self._notfication_url = notfication_url

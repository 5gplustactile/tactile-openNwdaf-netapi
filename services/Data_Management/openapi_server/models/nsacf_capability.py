# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class NsacfCapability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, support_ue_sac=False, support_pdu_sac=False):  # noqa: E501
        """NsacfCapability - a model defined in OpenAPI

        :param support_ue_sac: The support_ue_sac of this NsacfCapability.  # noqa: E501
        :type support_ue_sac: bool
        :param support_pdu_sac: The support_pdu_sac of this NsacfCapability.  # noqa: E501
        :type support_pdu_sac: bool
        """
        self.openapi_types = {
            'support_ue_sac': bool,
            'support_pdu_sac': bool
        }

        self.attribute_map = {
            'support_ue_sac': 'supportUeSAC',
            'support_pdu_sac': 'supportPduSAC'
        }

        self._support_ue_sac = support_ue_sac
        self._support_pdu_sac = support_pdu_sac

    @classmethod
    def from_dict(cls, dikt) -> 'NsacfCapability':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NsacfCapability of this NsacfCapability.  # noqa: E501
        :rtype: NsacfCapability
        """
        return util.deserialize_model(dikt, cls)

    @property
    def support_ue_sac(self):
        """Gets the support_ue_sac of this NsacfCapability.

        Indicates the service capability of the NSACF to monitor and control the number of registered UEs per network slice for the network slice that is subject to NSAC   true: Supported   false (default): Not Supported   # noqa: E501

        :return: The support_ue_sac of this NsacfCapability.
        :rtype: bool
        """
        return self._support_ue_sac

    @support_ue_sac.setter
    def support_ue_sac(self, support_ue_sac):
        """Sets the support_ue_sac of this NsacfCapability.

        Indicates the service capability of the NSACF to monitor and control the number of registered UEs per network slice for the network slice that is subject to NSAC   true: Supported   false (default): Not Supported   # noqa: E501

        :param support_ue_sac: The support_ue_sac of this NsacfCapability.
        :type support_ue_sac: bool
        """

        self._support_ue_sac = support_ue_sac

    @property
    def support_pdu_sac(self):
        """Gets the support_pdu_sac of this NsacfCapability.

        Indicates the service capability of the NSACF to monitor and control the number of established PDU sessions per network slice for the network slice that is subject to NSAC   true: Supported   false (default): Not Supported   # noqa: E501

        :return: The support_pdu_sac of this NsacfCapability.
        :rtype: bool
        """
        return self._support_pdu_sac

    @support_pdu_sac.setter
    def support_pdu_sac(self, support_pdu_sac):
        """Sets the support_pdu_sac of this NsacfCapability.

        Indicates the service capability of the NSACF to monitor and control the number of established PDU sessions per network slice for the network slice that is subject to NSAC   true: Supported   false (default): Not Supported   # noqa: E501

        :param support_pdu_sac: The support_pdu_sac of this NsacfCapability.
        :type support_pdu_sac: bool
        """

        self._support_pdu_sac = support_pdu_sac

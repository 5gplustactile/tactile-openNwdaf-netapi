# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.af_event import AfEvent
from openapi_server.models.amf_event_type import AmfEventType
from openapi_server.models.event_type import EventType
from openapi_server.models.nef_event import NefEvent
from openapi_server.models.notification_event_type import NotificationEventType
from openapi_server.models.nwdaf_event import NwdafEvent
from openapi_server.models.sac_event import SACEvent
from openapi_server.models.smf_event import SmfEvent
from openapi_server import util

from openapi_server.models.af_event import AfEvent  # noqa: E501
from openapi_server.models.amf_event_type import AmfEventType  # noqa: E501
from openapi_server.models.event_type import EventType  # noqa: E501
from openapi_server.models.nef_event import NefEvent  # noqa: E501
from openapi_server.models.notification_event_type import NotificationEventType  # noqa: E501
from openapi_server.models.nwdaf_event import NwdafEvent  # noqa: E501
from openapi_server.models.sac_event import SACEvent  # noqa: E501
from openapi_server.models.smf_event import SmfEvent  # noqa: E501

class DccfEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nwdaf_event=None, smf_event=None, amf_event=None, nef_event=None, udm_event=None, af_event=None, sac_event=None, nrf_event=None):  # noqa: E501
        """DccfEvent - a model defined in OpenAPI

        :param nwdaf_event: The nwdaf_event of this DccfEvent.  # noqa: E501
        :type nwdaf_event: NwdafEvent
        :param smf_event: The smf_event of this DccfEvent.  # noqa: E501
        :type smf_event: SmfEvent
        :param amf_event: The amf_event of this DccfEvent.  # noqa: E501
        :type amf_event: AmfEventType
        :param nef_event: The nef_event of this DccfEvent.  # noqa: E501
        :type nef_event: NefEvent
        :param udm_event: The udm_event of this DccfEvent.  # noqa: E501
        :type udm_event: EventType
        :param af_event: The af_event of this DccfEvent.  # noqa: E501
        :type af_event: AfEvent
        :param sac_event: The sac_event of this DccfEvent.  # noqa: E501
        :type sac_event: SACEvent
        :param nrf_event: The nrf_event of this DccfEvent.  # noqa: E501
        :type nrf_event: NotificationEventType
        """
        self.openapi_types = {
            'nwdaf_event': NwdafEvent,
            'smf_event': SmfEvent,
            'amf_event': AmfEventType,
            'nef_event': NefEvent,
            'udm_event': EventType,
            'af_event': AfEvent,
            'sac_event': SACEvent,
            'nrf_event': NotificationEventType
        }

        self.attribute_map = {
            'nwdaf_event': 'nwdafEvent',
            'smf_event': 'smfEvent',
            'amf_event': 'amfEvent',
            'nef_event': 'nefEvent',
            'udm_event': 'udmEvent',
            'af_event': 'afEvent',
            'sac_event': 'sacEvent',
            'nrf_event': 'nrfEvent'
        }

        self._nwdaf_event = nwdaf_event
        self._smf_event = smf_event
        self._amf_event = amf_event
        self._nef_event = nef_event
        self._udm_event = udm_event
        self._af_event = af_event
        self._sac_event = sac_event
        self._nrf_event = nrf_event

    @classmethod
    def from_dict(cls, dikt) -> 'DccfEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DccfEvent of this DccfEvent.  # noqa: E501
        :rtype: DccfEvent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nwdaf_event(self):
        """Gets the nwdaf_event of this DccfEvent.


        :return: The nwdaf_event of this DccfEvent.
        :rtype: NwdafEvent
        """
        return self._nwdaf_event

    @nwdaf_event.setter
    def nwdaf_event(self, nwdaf_event):
        """Sets the nwdaf_event of this DccfEvent.


        :param nwdaf_event: The nwdaf_event of this DccfEvent.
        :type nwdaf_event: NwdafEvent
        """

        self._nwdaf_event = nwdaf_event

    @property
    def smf_event(self):
        """Gets the smf_event of this DccfEvent.


        :return: The smf_event of this DccfEvent.
        :rtype: SmfEvent
        """
        return self._smf_event

    @smf_event.setter
    def smf_event(self, smf_event):
        """Sets the smf_event of this DccfEvent.


        :param smf_event: The smf_event of this DccfEvent.
        :type smf_event: SmfEvent
        """

        self._smf_event = smf_event

    @property
    def amf_event(self):
        """Gets the amf_event of this DccfEvent.


        :return: The amf_event of this DccfEvent.
        :rtype: AmfEventType
        """
        return self._amf_event

    @amf_event.setter
    def amf_event(self, amf_event):
        """Sets the amf_event of this DccfEvent.


        :param amf_event: The amf_event of this DccfEvent.
        :type amf_event: AmfEventType
        """

        self._amf_event = amf_event

    @property
    def nef_event(self):
        """Gets the nef_event of this DccfEvent.


        :return: The nef_event of this DccfEvent.
        :rtype: NefEvent
        """
        return self._nef_event

    @nef_event.setter
    def nef_event(self, nef_event):
        """Sets the nef_event of this DccfEvent.


        :param nef_event: The nef_event of this DccfEvent.
        :type nef_event: NefEvent
        """

        self._nef_event = nef_event

    @property
    def udm_event(self):
        """Gets the udm_event of this DccfEvent.


        :return: The udm_event of this DccfEvent.
        :rtype: EventType
        """
        return self._udm_event

    @udm_event.setter
    def udm_event(self, udm_event):
        """Sets the udm_event of this DccfEvent.


        :param udm_event: The udm_event of this DccfEvent.
        :type udm_event: EventType
        """

        self._udm_event = udm_event

    @property
    def af_event(self):
        """Gets the af_event of this DccfEvent.


        :return: The af_event of this DccfEvent.
        :rtype: AfEvent
        """
        return self._af_event

    @af_event.setter
    def af_event(self, af_event):
        """Sets the af_event of this DccfEvent.


        :param af_event: The af_event of this DccfEvent.
        :type af_event: AfEvent
        """

        self._af_event = af_event

    @property
    def sac_event(self):
        """Gets the sac_event of this DccfEvent.


        :return: The sac_event of this DccfEvent.
        :rtype: SACEvent
        """
        return self._sac_event

    @sac_event.setter
    def sac_event(self, sac_event):
        """Sets the sac_event of this DccfEvent.


        :param sac_event: The sac_event of this DccfEvent.
        :type sac_event: SACEvent
        """

        self._sac_event = sac_event

    @property
    def nrf_event(self):
        """Gets the nrf_event of this DccfEvent.


        :return: The nrf_event of this DccfEvent.
        :rtype: NotificationEventType
        """
        return self._nrf_event

    @nrf_event.setter
    def nrf_event(self, nrf_event):
        """Sets the nrf_event of this DccfEvent.


        :param nrf_event: The nrf_event of this DccfEvent.
        :type nrf_event: NotificationEventType
        """

        self._nrf_event = nrf_event

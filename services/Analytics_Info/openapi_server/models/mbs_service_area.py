# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.ncgi_tai import NcgiTai
from openapi_server.models.tai import Tai
from openapi_server import util

from openapi_server.models.ncgi_tai import NcgiTai  # noqa: E501
from openapi_server.models.tai import Tai  # noqa: E501

class MbsServiceArea(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ncgi_list=None, tai_list=None):  # noqa: E501
        """MbsServiceArea - a model defined in OpenAPI

        :param ncgi_list: The ncgi_list of this MbsServiceArea.  # noqa: E501
        :type ncgi_list: List[NcgiTai]
        :param tai_list: The tai_list of this MbsServiceArea.  # noqa: E501
        :type tai_list: List[Tai]
        """
        self.openapi_types = {
            'ncgi_list': List[NcgiTai],
            'tai_list': List[Tai]
        }

        self.attribute_map = {
            'ncgi_list': 'ncgiList',
            'tai_list': 'taiList'
        }

        self._ncgi_list = ncgi_list
        self._tai_list = tai_list

    @classmethod
    def from_dict(cls, dikt) -> 'MbsServiceArea':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MbsServiceArea of this MbsServiceArea.  # noqa: E501
        :rtype: MbsServiceArea
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ncgi_list(self):
        """Gets the ncgi_list of this MbsServiceArea.

        List of NR cell Ids  # noqa: E501

        :return: The ncgi_list of this MbsServiceArea.
        :rtype: List[NcgiTai]
        """
        return self._ncgi_list

    @ncgi_list.setter
    def ncgi_list(self, ncgi_list):
        """Sets the ncgi_list of this MbsServiceArea.

        List of NR cell Ids  # noqa: E501

        :param ncgi_list: The ncgi_list of this MbsServiceArea.
        :type ncgi_list: List[NcgiTai]
        """
        if ncgi_list is not None and len(ncgi_list) < 1:
            raise ValueError("Invalid value for `ncgi_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._ncgi_list = ncgi_list

    @property
    def tai_list(self):
        """Gets the tai_list of this MbsServiceArea.

        List of tracking area Ids  # noqa: E501

        :return: The tai_list of this MbsServiceArea.
        :rtype: List[Tai]
        """
        return self._tai_list

    @tai_list.setter
    def tai_list(self, tai_list):
        """Sets the tai_list of this MbsServiceArea.

        List of tracking area Ids  # noqa: E501

        :param tai_list: The tai_list of this MbsServiceArea.
        :type tai_list: List[Tai]
        """
        if tai_list is not None and len(tai_list) < 1:
            raise ValueError("Invalid value for `tai_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._tai_list = tai_list

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.dynamic_policy import DynamicPolicy
from openapi_server import util

from openapi_server.models.dynamic_policy import DynamicPolicy  # noqa: E501

class MsDynPolicyInvocationCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ms_dyn_ply_invocs=None):  # noqa: E501
        """MsDynPolicyInvocationCollection - a model defined in OpenAPI

        :param ms_dyn_ply_invocs: The ms_dyn_ply_invocs of this MsDynPolicyInvocationCollection.  # noqa: E501
        :type ms_dyn_ply_invocs: List[DynamicPolicy]
        """
        self.openapi_types = {
            'ms_dyn_ply_invocs': List[DynamicPolicy]
        }

        self.attribute_map = {
            'ms_dyn_ply_invocs': 'msDynPlyInvocs'
        }

        self._ms_dyn_ply_invocs = ms_dyn_ply_invocs

    @classmethod
    def from_dict(cls, dikt) -> 'MsDynPolicyInvocationCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MsDynPolicyInvocationCollection of this MsDynPolicyInvocationCollection.  # noqa: E501
        :rtype: MsDynPolicyInvocationCollection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ms_dyn_ply_invocs(self):
        """Gets the ms_dyn_ply_invocs of this MsDynPolicyInvocationCollection.


        :return: The ms_dyn_ply_invocs of this MsDynPolicyInvocationCollection.
        :rtype: List[DynamicPolicy]
        """
        return self._ms_dyn_ply_invocs

    @ms_dyn_ply_invocs.setter
    def ms_dyn_ply_invocs(self, ms_dyn_ply_invocs):
        """Sets the ms_dyn_ply_invocs of this MsDynPolicyInvocationCollection.


        :param ms_dyn_ply_invocs: The ms_dyn_ply_invocs of this MsDynPolicyInvocationCollection.
        :type ms_dyn_ply_invocs: List[DynamicPolicy]
        """
        if ms_dyn_ply_invocs is None:
            raise ValueError("Invalid value for `ms_dyn_ply_invocs`, must not be `None`")  # noqa: E501
        if ms_dyn_ply_invocs is not None and len(ms_dyn_ply_invocs) < 1:
            raise ValueError("Invalid value for `ms_dyn_ply_invocs`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._ms_dyn_ply_invocs = ms_dyn_ply_invocs

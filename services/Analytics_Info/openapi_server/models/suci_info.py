# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SuciInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, routing_inds=None, h_nw_pub_key_ids=None):  # noqa: E501
        """SuciInfo - a model defined in OpenAPI

        :param routing_inds: The routing_inds of this SuciInfo.  # noqa: E501
        :type routing_inds: List[str]
        :param h_nw_pub_key_ids: The h_nw_pub_key_ids of this SuciInfo.  # noqa: E501
        :type h_nw_pub_key_ids: List[int]
        """
        self.openapi_types = {
            'routing_inds': List[str],
            'h_nw_pub_key_ids': List[int]
        }

        self.attribute_map = {
            'routing_inds': 'routingInds',
            'h_nw_pub_key_ids': 'hNwPubKeyIds'
        }

        self._routing_inds = routing_inds
        self._h_nw_pub_key_ids = h_nw_pub_key_ids

    @classmethod
    def from_dict(cls, dikt) -> 'SuciInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SuciInfo of this SuciInfo.  # noqa: E501
        :rtype: SuciInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def routing_inds(self):
        """Gets the routing_inds of this SuciInfo.


        :return: The routing_inds of this SuciInfo.
        :rtype: List[str]
        """
        return self._routing_inds

    @routing_inds.setter
    def routing_inds(self, routing_inds):
        """Sets the routing_inds of this SuciInfo.


        :param routing_inds: The routing_inds of this SuciInfo.
        :type routing_inds: List[str]
        """
        if routing_inds is not None and len(routing_inds) < 1:
            raise ValueError("Invalid value for `routing_inds`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._routing_inds = routing_inds

    @property
    def h_nw_pub_key_ids(self):
        """Gets the h_nw_pub_key_ids of this SuciInfo.


        :return: The h_nw_pub_key_ids of this SuciInfo.
        :rtype: List[int]
        """
        return self._h_nw_pub_key_ids

    @h_nw_pub_key_ids.setter
    def h_nw_pub_key_ids(self, h_nw_pub_key_ids):
        """Sets the h_nw_pub_key_ids of this SuciInfo.


        :param h_nw_pub_key_ids: The h_nw_pub_key_ids of this SuciInfo.
        :type h_nw_pub_key_ids: List[int]
        """
        if h_nw_pub_key_ids is not None and len(h_nw_pub_key_ids) < 1:
            raise ValueError("Invalid value for `h_nw_pub_key_ids`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._h_nw_pub_key_ids = h_nw_pub_key_ids

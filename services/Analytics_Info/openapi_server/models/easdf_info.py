# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.ip_addr import IpAddr
from openapi_server.models.snssai_easdf_info_item import SnssaiEasdfInfoItem
from openapi_server import util

from openapi_server.models.ip_addr import IpAddr  # noqa: E501
from openapi_server.models.snssai_easdf_info_item import SnssaiEasdfInfoItem  # noqa: E501

class EasdfInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s_nssai_easdf_info_list=None, easdf_n6_ip_address_list=None, upf_n6_ip_address_list=None):  # noqa: E501
        """EasdfInfo - a model defined in OpenAPI

        :param s_nssai_easdf_info_list: The s_nssai_easdf_info_list of this EasdfInfo.  # noqa: E501
        :type s_nssai_easdf_info_list: List[SnssaiEasdfInfoItem]
        :param easdf_n6_ip_address_list: The easdf_n6_ip_address_list of this EasdfInfo.  # noqa: E501
        :type easdf_n6_ip_address_list: List[IpAddr]
        :param upf_n6_ip_address_list: The upf_n6_ip_address_list of this EasdfInfo.  # noqa: E501
        :type upf_n6_ip_address_list: List[IpAddr]
        """
        self.openapi_types = {
            's_nssai_easdf_info_list': List[SnssaiEasdfInfoItem],
            'easdf_n6_ip_address_list': List[IpAddr],
            'upf_n6_ip_address_list': List[IpAddr]
        }

        self.attribute_map = {
            's_nssai_easdf_info_list': 'sNssaiEasdfInfoList',
            'easdf_n6_ip_address_list': 'easdfN6IpAddressList',
            'upf_n6_ip_address_list': 'upfN6IpAddressList'
        }

        self._s_nssai_easdf_info_list = s_nssai_easdf_info_list
        self._easdf_n6_ip_address_list = easdf_n6_ip_address_list
        self._upf_n6_ip_address_list = upf_n6_ip_address_list

    @classmethod
    def from_dict(cls, dikt) -> 'EasdfInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EasdfInfo of this EasdfInfo.  # noqa: E501
        :rtype: EasdfInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s_nssai_easdf_info_list(self):
        """Gets the s_nssai_easdf_info_list of this EasdfInfo.


        :return: The s_nssai_easdf_info_list of this EasdfInfo.
        :rtype: List[SnssaiEasdfInfoItem]
        """
        return self._s_nssai_easdf_info_list

    @s_nssai_easdf_info_list.setter
    def s_nssai_easdf_info_list(self, s_nssai_easdf_info_list):
        """Sets the s_nssai_easdf_info_list of this EasdfInfo.


        :param s_nssai_easdf_info_list: The s_nssai_easdf_info_list of this EasdfInfo.
        :type s_nssai_easdf_info_list: List[SnssaiEasdfInfoItem]
        """
        if s_nssai_easdf_info_list is not None and len(s_nssai_easdf_info_list) < 1:
            raise ValueError("Invalid value for `s_nssai_easdf_info_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._s_nssai_easdf_info_list = s_nssai_easdf_info_list

    @property
    def easdf_n6_ip_address_list(self):
        """Gets the easdf_n6_ip_address_list of this EasdfInfo.


        :return: The easdf_n6_ip_address_list of this EasdfInfo.
        :rtype: List[IpAddr]
        """
        return self._easdf_n6_ip_address_list

    @easdf_n6_ip_address_list.setter
    def easdf_n6_ip_address_list(self, easdf_n6_ip_address_list):
        """Sets the easdf_n6_ip_address_list of this EasdfInfo.


        :param easdf_n6_ip_address_list: The easdf_n6_ip_address_list of this EasdfInfo.
        :type easdf_n6_ip_address_list: List[IpAddr]
        """
        if easdf_n6_ip_address_list is not None and len(easdf_n6_ip_address_list) < 1:
            raise ValueError("Invalid value for `easdf_n6_ip_address_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._easdf_n6_ip_address_list = easdf_n6_ip_address_list

    @property
    def upf_n6_ip_address_list(self):
        """Gets the upf_n6_ip_address_list of this EasdfInfo.


        :return: The upf_n6_ip_address_list of this EasdfInfo.
        :rtype: List[IpAddr]
        """
        return self._upf_n6_ip_address_list

    @upf_n6_ip_address_list.setter
    def upf_n6_ip_address_list(self, upf_n6_ip_address_list):
        """Sets the upf_n6_ip_address_list of this EasdfInfo.


        :param upf_n6_ip_address_list: The upf_n6_ip_address_list of this EasdfInfo.
        :type upf_n6_ip_address_list: List[IpAddr]
        """
        if upf_n6_ip_address_list is not None and len(upf_n6_ip_address_list) < 1:
            raise ValueError("Invalid value for `upf_n6_ip_address_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._upf_n6_ip_address_list = upf_n6_ip_address_list

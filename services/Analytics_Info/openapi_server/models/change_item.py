# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.change_type import ChangeType
from openapi_server import util

from openapi_server.models.change_type import ChangeType  # noqa: E501

class ChangeItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, op=None, path=None, _from=None, orig_value=None, new_value=None):  # noqa: E501
        """ChangeItem - a model defined in OpenAPI

        :param op: The op of this ChangeItem.  # noqa: E501
        :type op: ChangeType
        :param path: The path of this ChangeItem.  # noqa: E501
        :type path: str
        :param _from: The _from of this ChangeItem.  # noqa: E501
        :type _from: str
        :param orig_value: The orig_value of this ChangeItem.  # noqa: E501
        :type orig_value: object
        :param new_value: The new_value of this ChangeItem.  # noqa: E501
        :type new_value: object
        """
        self.openapi_types = {
            'op': ChangeType,
            'path': str,
            '_from': str,
            'orig_value': object,
            'new_value': object
        }

        self.attribute_map = {
            'op': 'op',
            'path': 'path',
            '_from': 'from',
            'orig_value': 'origValue',
            'new_value': 'newValue'
        }

        self._op = op
        self._path = path
        self.__from = _from
        self._orig_value = orig_value
        self._new_value = new_value

    @classmethod
    def from_dict(cls, dikt) -> 'ChangeItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChangeItem of this ChangeItem.  # noqa: E501
        :rtype: ChangeItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def op(self):
        """Gets the op of this ChangeItem.


        :return: The op of this ChangeItem.
        :rtype: ChangeType
        """
        return self._op

    @op.setter
    def op(self, op):
        """Sets the op of this ChangeItem.


        :param op: The op of this ChangeItem.
        :type op: ChangeType
        """
        if op is None:
            raise ValueError("Invalid value for `op`, must not be `None`")  # noqa: E501

        self._op = op

    @property
    def path(self):
        """Gets the path of this ChangeItem.

        contains a JSON pointer value (as defined in IETF RFC 6901) that references a target  location within the resource on which the change has been applied.   # noqa: E501

        :return: The path of this ChangeItem.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ChangeItem.

        contains a JSON pointer value (as defined in IETF RFC 6901) that references a target  location within the resource on which the change has been applied.   # noqa: E501

        :param path: The path of this ChangeItem.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def _from(self):
        """Gets the _from of this ChangeItem.

        indicates the path of the source JSON element (according to JSON Pointer syntax)  being moved or copied to the location indicated by the \"path\" attribute. It shall  be present if the \"op\" attribute is of value \"MOVE\".   # noqa: E501

        :return: The _from of this ChangeItem.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ChangeItem.

        indicates the path of the source JSON element (according to JSON Pointer syntax)  being moved or copied to the location indicated by the \"path\" attribute. It shall  be present if the \"op\" attribute is of value \"MOVE\".   # noqa: E501

        :param _from: The _from of this ChangeItem.
        :type _from: str
        """

        self.__from = _from

    @property
    def orig_value(self):
        """Gets the orig_value of this ChangeItem.


        :return: The orig_value of this ChangeItem.
        :rtype: object
        """
        return self._orig_value

    @orig_value.setter
    def orig_value(self, orig_value):
        """Sets the orig_value of this ChangeItem.


        :param orig_value: The orig_value of this ChangeItem.
        :type orig_value: object
        """

        self._orig_value = orig_value

    @property
    def new_value(self):
        """Gets the new_value of this ChangeItem.


        :return: The new_value of this ChangeItem.
        :rtype: object
        """
        return self._new_value

    @new_value.setter
    def new_value(self, new_value):
        """Sets the new_value of this ChangeItem.


        :param new_value: The new_value of this ChangeItem.
        :type new_value: object
        """

        self._new_value = new_value

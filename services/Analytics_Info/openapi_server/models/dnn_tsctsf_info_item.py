# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.dnn_smf_info_item_dnn import DnnSmfInfoItemDnn
from openapi_server import util

from openapi_server.models.dnn_smf_info_item_dnn import DnnSmfInfoItemDnn  # noqa: E501

class DnnTsctsfInfoItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dnn=None):  # noqa: E501
        """DnnTsctsfInfoItem - a model defined in OpenAPI

        :param dnn: The dnn of this DnnTsctsfInfoItem.  # noqa: E501
        :type dnn: DnnSmfInfoItemDnn
        """
        self.openapi_types = {
            'dnn': DnnSmfInfoItemDnn
        }

        self.attribute_map = {
            'dnn': 'dnn'
        }

        self._dnn = dnn

    @classmethod
    def from_dict(cls, dikt) -> 'DnnTsctsfInfoItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DnnTsctsfInfoItem of this DnnTsctsfInfoItem.  # noqa: E501
        :rtype: DnnTsctsfInfoItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dnn(self):
        """Gets the dnn of this DnnTsctsfInfoItem.


        :return: The dnn of this DnnTsctsfInfoItem.
        :rtype: DnnSmfInfoItemDnn
        """
        return self._dnn

    @dnn.setter
    def dnn(self, dnn):
        """Sets the dnn of this DnnTsctsfInfoItem.


        :param dnn: The dnn of this DnnTsctsfInfoItem.
        :type dnn: DnnSmfInfoItemDnn
        """
        if dnn is None:
            raise ValueError("Invalid value for `dnn`, must not be `None`")  # noqa: E501

        self._dnn = dnn

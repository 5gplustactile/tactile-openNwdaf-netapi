# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.identity_range import IdentityRange
from openapi_server import util

from openapi_server.models.identity_range import IdentityRange  # noqa: E501

class MnpfInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, msisdn_ranges=None):  # noqa: E501
        """MnpfInfo - a model defined in OpenAPI

        :param msisdn_ranges: The msisdn_ranges of this MnpfInfo.  # noqa: E501
        :type msisdn_ranges: List[IdentityRange]
        """
        self.openapi_types = {
            'msisdn_ranges': List[IdentityRange]
        }

        self.attribute_map = {
            'msisdn_ranges': 'msisdnRanges'
        }

        self._msisdn_ranges = msisdn_ranges

    @classmethod
    def from_dict(cls, dikt) -> 'MnpfInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MnpfInfo of this MnpfInfo.  # noqa: E501
        :rtype: MnpfInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def msisdn_ranges(self):
        """Gets the msisdn_ranges of this MnpfInfo.


        :return: The msisdn_ranges of this MnpfInfo.
        :rtype: List[IdentityRange]
        """
        return self._msisdn_ranges

    @msisdn_ranges.setter
    def msisdn_ranges(self, msisdn_ranges):
        """Sets the msisdn_ranges of this MnpfInfo.


        :param msisdn_ranges: The msisdn_ranges of this MnpfInfo.
        :type msisdn_ranges: List[IdentityRange]
        """
        if msisdn_ranges is None:
            raise ValueError("Invalid value for `msisdn_ranges`, must not be `None`")  # noqa: E501
        if msisdn_ranges is not None and len(msisdn_ranges) < 1:
            raise ValueError("Invalid value for `msisdn_ranges`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._msisdn_ranges = msisdn_ranges
